"""
Django settings for tiberium project.

Generated by 'django-admin startproject' using Django 2.1.7.
"""

import os

import environ
from celery.schedules import crontab
from django.urls import reverse_lazy

from .drf_settings import JWT_AUTH, REST_FRAMEWORK  # pylint: disable=W0611

env = environ.Env(DEBUG=(bool, False))


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

DEBUG = env('DEBUG')
SECRET_KEY = env.str('SECRET_KEY')

ALLOWED_HOSTS = ['*']

ADMIN_URL = env.str('ADMIN_URL', 'admin')

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'drf_yasg',
    'tiberium',
    'apps.user',
    'apps.post',
    'apps.passport',
    'apps.youtube',
    'rest_framework_recaptcha',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'drf_yasg.middleware.SwaggerExceptionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'tiberium.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, '../templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ]
        },
    }
]

# drf-yasg
SWAGGER_SETTINGS = {
    'LOGIN_URL': reverse_lazy('admin:login'),
    'LOGOUT_URL': '/admin/logout',
    'PERSIST_AUTH': True,
    'REFETCH_SCHEMA_WITH_AUTH': True,
    'REFETCH_SCHEMA_ON_LOGOUT': True,
    'DEFAULT_INFO': 'tiberium.urls.swagger_info',
    'SECURITY_DEFINITIONS': {
        # 'basic': {'type': 'apiKey'},
        'JWT Token': {'type': 'apiKey', 'in': 'header', 'name': 'Authorization'}
    },
}

WSGI_APPLICATION = 'tiberium.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases
#

DATABASES = {'default': env.db(engine='django.db.backends.postgresql')}

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/api/static/'

# STATIC_ROOT = os.path.join(BASE_DIR, 'collectstatic')
STATIC_ROOT = 'static/'

# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]

CELERY_BROKER_URL = os.environ.get('CELERY_BROKER_URL', 'amqp://admin:pass@rabbitmq:5672')
CELERY_RESULT_BACKEND = os.environ.get('CELERY_RESULT_BACKEND_URL', 'redis://redis:6379/1')
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE

# must be correct configured in production
CORS_ORIGIN_WHITELIST = []
# setup to False in production
CORS_ORIGIN_ALLOW_ALL = True

CELERY_ONCE = {
    'backend': 'celery_once.backends.Redis',
    'settings': {'url': 'redis://redis:6379/1', 'default_timeout': 60 * 60},
}

CELERY_BEAT_SCHEDULE = {
    'Social-life': {'task': 'apps.post.tasks.social_life.run_social_life', 'schedule': crontab(minute="*/15")}
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': os.environ.get('REDIS_URL', 'redis://redis:6379/2'),
        'TIMEOUT': 60 * 15,
        'OPTIONS': {'PARSER_CLASS': 'redis.connection.HiredisParser'},
    }
}

ADMIN_USERNAME = env.str('ADMIN_USERNAME', 'admin')
DRF_RECAPTCHA_SECRET_KEY = env.str('DRF_RECAPTCHA_SECRET_KEY', None)
INITIAL_USER_COUNT = env.int('INITIAL_USER_COUNT', 100)
MAX_INITIAL_LIKES_ON_POST = env.int('MAX_INITIAL_LIKES_ON_POST', 200)
